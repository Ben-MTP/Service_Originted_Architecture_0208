<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:tns="http://vasplatform.mobifone.vn"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:ns0="urn:click2Call" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/IVR.xsd"/>
        <oracle-xsl-mapper:rootElement name="MakeTromboneCallResponse" namespace="urn:click2Call"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/BS_IVR.xsd"/>
        <oracle-xsl-mapper:rootElement name="response" namespace="http://vasplatform.mobifone.vn"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.3.0(XSLT Build 170820.1700.2557) AT [FRI NOV 08 15:22:43 ICT 2019].-->
  </oracle-xsl-mapper:schema>
  <xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'"/>
  <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <xsl:variable name="v_item" select="/*:return/*:item"/>
    <tns:response>
      <tns:STATUS>
        <xsl:choose>
          <xsl:when test="$v_item[1]/*:resultcode = '1'">
            <xsl:value-of select="0"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="1"/>
          </xsl:otherwise>
        </xsl:choose>
      </tns:STATUS>
      <tns:STATUS_MESSAGE>
        <xsl:choose>
          <xsl:when test="$v_item[1]/*:resultcode = '1'">
            <xsl:value-of select="'SUCCESS'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'FAIL'"/>
          </xsl:otherwise>
        </xsl:choose>
      </tns:STATUS_MESSAGE>
      <tns:Parameters>
        <xsl:for-each select="$v_item">
          <xsl:variable name="countItem" select="position()"/>
          <xsl:for-each select="*">
            <tns:Parameter>
              <tns:name>
                <!--translate(name(), $lowercase, uppercase)-->
                <xsl:value-of select="concat(translate(name(), $lowercase, $uppercase), '_', $countItem)"/>
              </tns:name>
              <tns:value>
                <xsl:value-of select="text()"/>
              </tns:value>
            </tns:Parameter>
          </xsl:for-each>
        </xsl:for-each>
      </tns:Parameters>
    </tns:response>
  </xsl:template>
</xsl:stylesheet>
