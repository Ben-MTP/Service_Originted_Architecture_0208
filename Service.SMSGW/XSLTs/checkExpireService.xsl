<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:ns0="http://vasplatform.mobifone.vn"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:fn="http://www.w3.org/2005/xpath-functions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/ServiceFormat.xsd"/>
        <oracle-xsl-mapper:rootElement name="XMLCacheEntry" namespace="http://vasplatform.mobifone.vn"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/ServiceFormat.xsd"/>
        <oracle-xsl-mapper:rootElement name="content" namespace="http://vasplatform.mobifone.vn"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.3.0(XSLT Build 170820.1700.2557) AT [THU NOV 28 16:33:56 ICT 2019].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <xsl:variable name="currentDate" select="xp20:current-date ()"/>
    <!--0 is block; 1: is bypass; 2: is bpass + use prog -->
    <ns0:content>
      <ns0:value>
        <!--PKG-->
        <xsl:choose>
          <!-- check codition pkg_start_date and pkg_end_date -->
          <xsl:when test="/ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PKG_START_DATE']/ns0:value and /ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PKG_END_DATE']/ns0:value">
            <xsl:choose>
              <!-- check codition pkg_start_date and pkg_end_date -->
              <xsl:when test="/ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PKG_START_DATE']/ns0:value &lt;= xp20:current-date() 
                              and 
                              xp20:current-date() &lt;= /ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PKG_END_DATE']/ns0:value">
                <!-- START PROGRAM -->
                <xsl:choose>
                  <!-- if existing prog_start_date and prog_end_date -->
                  <xsl:when test="/ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PROG_START_DATE']/ns0:value and /ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PROG_END_DATE']/ns0:value">
                    <xsl:choose>
                      <!-- check codition prog_start_date and prog_end_date -->
                      <xsl:when test="/ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PROG_START_DATE']/ns0:value &lt;= xp20:current-date() 
                                      and 
                                      xp20:current-date() &lt;= /ns0:XMLCacheEntry/ns0:CacheValue/ns0:Parameters/ns0:Parameter[ns0:name = 'PROG_END_DATE']/ns0:value">
                        <xsl:value-of select="2"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="1"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <!-- else not exist prog_start_date and prog_end_date -->
                  <xsl:otherwise>
                    <xsl:value-of select="1"/>
                  </xsl:otherwise>
                  <!-- end if  prog_start_date and prog_end_date -->
                </xsl:choose>
                <!-- END PROGRAM -->
              </xsl:when>
              <!-- else not exist prog_start_date and prog_end_date -->
              <xsl:otherwise>
                <xsl:value-of select="0"/>
              </xsl:otherwise>
              <!-- end if check codition pkg_start_date and pkg_end_date -->
            </xsl:choose>
          </xsl:when>
          <!-- else codition pkg_start_date and pkg_end_date -->
          <xsl:otherwise>
            <xsl:value-of select="1"/>
          </xsl:otherwise>
          <!-- end codition pkg_start_date and pkg_end_date -->
        </xsl:choose>
        <!-- END PKG -->
      </ns0:value>
    </ns0:content>
  </xsl:template>
</xsl:stylesheet>
